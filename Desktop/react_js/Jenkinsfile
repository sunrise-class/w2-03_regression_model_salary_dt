pipeline {
    agent any

    stages {
        stage('Hello') {
            steps {
                echo 'Hello World'
            }
        }
        // stage('Git clone') {
        //     steps {
        //         echo 'Git clone from GitHub'
        //         git branch: 'main', url: 'https://github.com/channnary/react_js.git',credentialsId: 'github-jenkins002'
        //         sh """
        //         ls -lrt
        //         whoami
        //         pwd
        //         """
        //     }
        // }
        stage('Build images') {
            steps {
                echo 'Build images'
                sh 'docker build -t channary/reactjenkins:1.1 -f react-dockerfile .'
            }
        }
        stage('Clean up existing container') {
            steps {
                script {
                    def containerExists = sh(script: 'docker ps -a --filter "name=reactjs-test" --format "{{.ID}}"', returnStdout: true).trim()
                    if (containerExists) {
                        echo 'Stopping and removing existing container'
                        sh 'docker stop reactjs-test'
                        sh 'docker rm reactjs-test'
                    } else {
                        echo 'No existing container to remove'
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploy'
                sh 'docker run -d -p 30001:3000 --name reactjs-test channary/reactjenkins:1.1'
            }
        }
        stage('curl ip public'){
            steps {
                sh 'curl ifconfig.me'
            }
        }
        stage('clean workspace'){
            steps {
                cleanWs()
            }
        }
    }
}
